{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/dhruvipatel/Documents/nvidia-earnings%20/frontend/src/app/components/SentimentChart.js"],"sourcesContent":["// src/components/SentimentChart.js\n'use client';\n\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function SentimentChart({ data }) {\n  if (!data || data.length === 0) return <p>No chart data available</p>;\n\n  // Format data for chart\n  const chartData = {\n    labels: data.map(q => q.quarter.replace('_', ' ')),\n    datasets: [\n      {\n        label: 'Management Sentiment',\n        data: data.map(q => q.management.score),\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        tension: 0.3\n      },\n      {\n        label: 'Q&A Sentiment',\n        data: data.map(q => q.qa.score),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        tension: 0.3\n      }\n    ]\n  };\n\n  // Chart configuration options\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Sentiment Scores by Quarter',\n        font: {\n          size: 16\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        min: -1,\n        max: 1,\n        ticks: {\n          stepSize: 0.5,\n          callback: function(value) {\n            return value.toFixed(1);\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div style={{ height: '400px' }}>\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AAGnC;AACA;AAHA;;;;AAKA,+BAA+B;AAC/B,4JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,4JAAA,CAAA,gBAAa,EACb,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,eAAY,EACZ,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,QAAK,EACL,4JAAA,CAAA,UAAO,EACP,4JAAA,CAAA,SAAM;AAGO,SAAS,eAAe,EAAE,IAAI,EAAE;IAC7C,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG,qBAAO,8OAAC;kBAAE;;;;;;IAE1C,wBAAwB;IACxB,MAAM,YAAY;QAChB,QAAQ,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO,CAAC,OAAO,CAAC,KAAK;QAC7C,UAAU;YACR;gBACE,OAAO;gBACP,MAAM,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,UAAU,CAAC,KAAK;gBACtC,aAAa;gBACb,iBAAiB;gBACjB,SAAS;YACX;YACA;gBACE,OAAO;gBACP,MAAM,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,EAAE,CAAC,KAAK;gBAC9B,aAAa;gBACb,iBAAiB;gBACjB,SAAS;YACX;SACD;IACH;IAEA,8BAA8B;IAC9B,MAAM,UAAU;QACd,YAAY;QACZ,qBAAqB;QACrB,SAAS;YACP,QAAQ;gBACN,UAAU;YACZ;YACA,OAAO;gBACL,SAAS;gBACT,MAAM;gBACN,MAAM;oBACJ,MAAM;gBACR;YACF;YACA,SAAS;gBACP,WAAW;oBACT,OAAO,SAAS,OAAO;wBACrB,OAAO,GAAG,QAAQ,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI;oBACnE;gBACF;YACF;QACF;QACA,QAAQ;YACN,GAAG;gBACD,KAAK,CAAC;gBACN,KAAK;gBACL,OAAO;oBACL,UAAU;oBACV,UAAU,SAAS,KAAK;wBACtB,OAAO,MAAM,OAAO,CAAC;oBACvB;gBACF;YACF;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,OAAO;YAAE,QAAQ;QAAQ;kBAC5B,cAAA,8OAAC,sJAAA,CAAA,OAAI;YAAC,MAAM;YAAW,SAAS;;;;;;;;;;;AAGtC","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/dhruvipatel/Documents/nvidia-earnings%20/frontend/src/app/components/ThemeHighlights.js"],"sourcesContent":["export default function ThemeHighlights({ themes }) {\n  if (!themes || themes.length === 0) return <p>No theme data available</p>;\n\n  return (\n    <div className=\"themes-container\">\n      {themes.map((theme, index) => (\n        <div key={index} className=\"theme-card\">\n          <h3>Theme #{index + 1}</h3>\n          <p>{theme}</p>\n        </div>\n      ))}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,gBAAgB,EAAE,MAAM,EAAE;IAChD,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG,qBAAO,8OAAC;kBAAE;;;;;;IAE9C,qBACE,8OAAC;QAAI,WAAU;kBACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC;gBAAgB,WAAU;;kCACzB,8OAAC;;4BAAG;4BAAQ,QAAQ;;;;;;;kCACpB,8OAAC;kCAAG;;;;;;;eAFI;;;;;;;;;;AAOlB","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/dhruvipatel/Documents/nvidia-earnings%20/frontend/src/app/components/ComparisonTable.js"],"sourcesContent":["export default function ComparisonTable({ data }) {\n  if (!data || data.length === 0) return <p>No comparison data available</p>;\n\n  return (\n    <table className=\"comparison-table\">\n      <thead>\n        <tr>\n          <th>Quarter</th>\n          <th>Management Change</th>\n          <th>Q&A Change</th>\n          <th>New Themes</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, index) => (\n          <tr key={index}>\n            <td>{row.quarter.replace('_', ' ')}</td>\n            <td className={row.managementChange >= 0 ? 'positive' : 'negative'}>\n              {row.managementChange >= 0 ? '+' : ''}{row.managementChange.toFixed(2)}\n            </td>\n            <td className={row.qaChange >= 0 ? 'positive' : 'negative'}>\n              {row.qaChange >= 0 ? '+' : ''}{row.qaChange.toFixed(2)}\n            </td>\n            <td>\n              {row.newThemes.length > 0 ? (\n                <ul>\n                  {row.newThemes.map((theme, i) => (\n                    <li key={i}>{theme}</li>\n                  ))}\n                </ul>\n              ) : 'No new themes'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,gBAAgB,EAAE,IAAI,EAAE;IAC9C,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG,qBAAO,8OAAC;kBAAE;;;;;;IAE1C,qBACE,8OAAC;QAAM,WAAU;;0BACf,8OAAC;0BACC,cAAA,8OAAC;;sCACC,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAG;;;;;;;;;;;;;;;;;0BAGR,8OAAC;0BACE,KAAK,GAAG,CAAC,CAAC,KAAK,sBACd,8OAAC;;0CACC,8OAAC;0CAAI,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK;;;;;;0CAC9B,8OAAC;gCAAG,WAAW,IAAI,gBAAgB,IAAI,IAAI,aAAa;;oCACrD,IAAI,gBAAgB,IAAI,IAAI,MAAM;oCAAI,IAAI,gBAAgB,CAAC,OAAO,CAAC;;;;;;;0CAEtE,8OAAC;gCAAG,WAAW,IAAI,QAAQ,IAAI,IAAI,aAAa;;oCAC7C,IAAI,QAAQ,IAAI,IAAI,MAAM;oCAAI,IAAI,QAAQ,CAAC,OAAO,CAAC;;;;;;;0CAEtD,8OAAC;0CACE,IAAI,SAAS,CAAC,MAAM,GAAG,kBACtB,8OAAC;8CACE,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,kBACzB,8OAAC;sDAAY;2CAAJ;;;;;;;;;2CAGX;;;;;;;uBAfC;;;;;;;;;;;;;;;;AAsBnB","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/dhruvipatel/Documents/nvidia-earnings%20/frontend/src/app/components/TranscriptViewer.js"],"sourcesContent":["import { useState } from 'react';\n\nexport default function TranscriptViewer({ management, qa }) {\n  const [activeTab, setActiveTab] = useState('management');\n\n  return (\n    <div className=\"transcript-viewer\">\n      <div className=\"tabs\">\n        <button \n          className={activeTab === 'management' ? 'active' : ''}\n          onClick={() => setActiveTab('management')}\n        >\n          Management Remarks\n        </button>\n        <button \n          className={activeTab === 'qa' ? 'active' : ''}\n          onClick={() => setActiveTab('qa')}\n        >\n          Q&A Session\n        </button>\n      </div>\n\n      <div className=\"transcript-content\">\n        {activeTab === 'management' ? (\n          <>\n            <div className=\"sentiment-summary\">\n              <strong>Sentiment:</strong> {management.label} (Score: {management.score.toFixed(2)})\n            </div>\n            <h3>Key Phrases:</h3>\n            <ul>\n              {management.key_phrases.map((phrase, i) => (\n                <li key={i}>{phrase}</li>\n              ))}\n            </ul>\n          </>\n        ) : (\n          <>\n            <div className=\"sentiment-summary\">\n              <strong>Sentiment:</strong> {qa.label} (Score: {qa.score.toFixed(2)})\n            </div>\n            <h3>Key Phrases:</h3>\n            <ul>\n              {qa.key_phrases.map((phrase, i) => (\n                <li key={i}>{phrase}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,iBAAiB,EAAE,UAAU,EAAE,EAAE,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAW,cAAc,eAAe,WAAW;wBACnD,SAAS,IAAM,aAAa;kCAC7B;;;;;;kCAGD,8OAAC;wBACC,WAAW,cAAc,OAAO,WAAW;wBAC3C,SAAS,IAAM,aAAa;kCAC7B;;;;;;;;;;;;0BAKH,8OAAC;gBAAI,WAAU;0BACZ,cAAc,6BACb;;sCACE,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;8CAAO;;;;;;gCAAmB;gCAAE,WAAW,KAAK;gCAAC;gCAAU,WAAW,KAAK,CAAC,OAAO,CAAC;gCAAG;;;;;;;sCAEtF,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCACE,WAAW,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,kBACnC,8OAAC;8CAAY;mCAAJ;;;;;;;;;;;iDAKf;;sCACE,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;8CAAO;;;;;;gCAAmB;gCAAE,GAAG,KAAK;gCAAC;gCAAU,GAAG,KAAK,CAAC,OAAO,CAAC;gCAAG;;;;;;;sCAEtE,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCACE,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,kBAC3B,8OAAC;8CAAY;mCAAJ;;;;;;;;;;;;;;;;;;;;;;;AAQzB","debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///Users/dhruvipatel/Documents/nvidia-earnings%20/frontend/src/app/page.js"],"sourcesContent":["// src/app/page.js\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport SentimentChart from './components/SentimentChart';\nimport ThemeHighlights from './components/ThemeHighlights';\nimport ComparisonTable from './components/ComparisonTable';\nimport TranscriptViewer from './components/TranscriptViewer';\n\nexport default function Home() {\n  const [quarters, setQuarters] = useState([]);\n  const [comparison, setComparison] = useState([]);\n  const [selectedQuarter, setSelectedQuarter] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        // Load quarter data\n        const quarterFiles = ['Q2_2025', 'Q3_2025', 'Q4_2025', 'Q1_2026'];\n        const quarterData = [];\n        \n        for (const q of quarterFiles) {\n          try {\n            const res = await fetch(`/data/${q}.json`);\n            if (!res.ok) throw new Error(`Failed to load ${q}.json: ${res.status}`);\n            const data = await res.json();\n            quarterData.push(data);\n          } catch (err) {\n            console.error(`Error loading ${q}.json:`, err);\n            // Create placeholder data for missing files\n            quarterData.push({\n              quarter: q,\n              management: {\n                label: \"Data Missing\",\n                score: 0,\n                key_phrases: [\"Data file not found\"]\n              },\n              qa: {\n                label: \"Data Missing\",\n                score: 0,\n                key_phrases: [\"Data file not found\"]\n              },\n              themes: [\"Data not available\"]\n            });\n          }\n        }\n        \n        setQuarters(quarterData);\n        \n        // Set initial selected quarter to most recent\n        setSelectedQuarter(quarterData[quarterData.length - 1]);\n        \n        // Load comparison data\n        try {\n          const compRes = await fetch('/data/comparison.json');\n          if (compRes.ok) {\n            const compData = await compRes.json();\n            setComparison(compData);\n          }\n        } catch (err) {\n          console.error('Error loading comparison data:', err);\n        }\n        \n      } catch (error) {\n        console.error('Failed to load data:', error);\n        setError('Failed to load analysis data. Please check the console for details.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading NVIDIA earnings analysis...</p>\n        <div className=\"loader\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error\">\n        <h2>Error Loading Data</h2>\n        <p>{error}</p>\n        <p>Please check:</p>\n        <ul>\n          <li>JSON files exist in public/data/ directory</li>\n          <li>Files are named correctly (Q2_2025.json, etc.)</li>\n          <li>Analysis script was run successfully</li>\n        </ul>\n        <button onClick={() => window.location.reload()}>Retry</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <div className=\"logo-container\">\n          <div className=\"nvidia-logo\">NVIDIA</div>\n        </div>\n        <h1>Earnings Call Analysis</h1>\n        <p>AI-powered insights from the last four quarters</p>\n      </header>\n\n      <main>\n        <section className=\"chart-section\">\n          <h2>Sentiment Analysis</h2>\n          <div className=\"chart-container\">\n            <SentimentChart data={quarters} />\n          </div>\n        </section>\n\n        <section className=\"comparison-section\">\n          <h2>Quarter-over-Quarter Changes</h2>\n          <ComparisonTable data={comparison} />\n        </section>\n\n        <div className=\"quarter-selector\">\n          <h2>Select Quarter</h2>\n          <div className=\"buttons\">\n            {quarters.map(q => (\n              <button \n                key={q.quarter} \n                onClick={() => setSelectedQuarter(q)}\n                className={selectedQuarter?.quarter === q.quarter ? 'active' : ''}\n              >\n                {q.quarter.replace('_', ' ')}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {selectedQuarter && (\n          <>\n            <section className=\"themes-section\">\n              <h2>Key Themes: {selectedQuarter.quarter.replace('_', ' ')}</h2>\n              <ThemeHighlights themes={selectedQuarter.themes} />\n            </section>\n\n            <section className=\"transcript-section\">\n              <h2>Transcript Highlights</h2>\n              <TranscriptViewer \n                management={selectedQuarter.management} \n                qa={selectedQuarter.qa} \n              />\n            </section>\n          </>\n        )}\n      </main>\n\n      <footer className=\"footer\">\n        <p>Data powered by Gemini AI • Last updated {new Date().toLocaleDateString()}</p>\n      </footer>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}